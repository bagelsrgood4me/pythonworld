version: '3.9'

services:
  pythonworld:
    image: pythonworld
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "app.wsgi"]
    environment:
      - FLUENTD_HOST=fluentd
      - FLUENTD_PORT=24224
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    ports:
      - 8000:8000
    volumes:
      - .:/app
  
  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: always

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    container_name: rabbitmq_container
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    restart: always

  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: pyamqp://rabbitmq_container:5672
      CELERY_RESULT_BACKEND: redis://redis
      FLOWER_UNAUTHENTICATED_API: true
    depends_on:
      - opendns-worker
#      - proxy-worker
      - redis

  opendns-worker:
    build:
      context: .
      dockerfile: workers/opendns/Dockerfile
    command: tail -f /dev/null

#  firewall-worker:
#    build:
#      context: .
#      dockerfile: workers/firewall/Dockerfile
#
#  proxy-worker:
#    build:
#      context: .
#      dockerfile: workers/proxy/Dockerfile

#  proxy-worker:
#    build: .
#    command: celery -A worker worker --loglevel=debug
#    volumes:
#      - ./workers/opendns:/app/myworker
#      - ./workers/worker.py:/app/worker.py
#
#  firewall-worker:
#    build: .
#    command: celery -A worker worker --loglevel=debug
#    volumes:
#      - ./workers/opendns:/app/myworker
#      - ./workers/worker.py:/app/worker.py
volumes:
  redis_data:
  rabbitmq_data: